Создать двух пользователей (с помощью метода User.objects.create_user('username'))

user1 = User.objects.create_user(username='Marina')
user2 = User.objects.create_user(username='Alissa')

Создать два объекта модели Author, связанные с пользователями.

author = Author.objects.create(authorUser=user1)
author2 = Author.objects.create(authorUser=user2)

Добавить 4 категории в модель Category.

Category.objects.create(name='Relationship')
Category.objects.create(name='Politics')
Category.objects.create(name='Sport')
Category.objects.create(name='Health')

Добавить 2 статьи и 1 новость.

Post.objects.create(author=author, category_type='AR', title='4 правила долговременного и эффективного похудения', text='Для этого нужно следовать 4 простым правилам:Не убирайте из меню полностью привычные для себя продукты. Не ругайте и не наказывайте себя за срывы. Не торопитесь сбросить сразу много веса.Избавьтесь от сопутствующих заболеваний.')
Post.objects.create(author=author, category_type='NW', title='Вызов Трусовой: пять уникальных людей, разрывавших в разных видах спорта', text='Одним из главных спортивных событий лета станет выступление Александры Трусовой на Неделе легкой атлетики в Москве. В четверг именитая фигуристка выйдет в сектор прыжков в длину, примерив на себя новую роль. Пока переход серебряного призера Олимпийских игр в другой вид спорта выглядит как временный эксперимент. Но, может, в будущем Трусова превратится в полноценную легкоатлетку?')
Post.objects.create(author=author2, category_type='AR', title='Что нужно сделать этим летом разным знакам Зодиака', text='Лето 2022 года обещает быть очень переменчивым и важным временем. Астрологи проанализировали положение звезд и грядущие перемены в положении ночных светил, чтобы составить список важнейших дел для каждого Знака.')


Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).

Post.objects.get(pk=1).postCategory.add(Category.objects.get(id=4))
Post.objects.get(pk=2).postCategory.add(Category.objects.get(id=2))
Post.objects.get(pk=4).postCategory.add(Category.objects.get(id=1))
Post.objects.get(pk=4).postCategory.add(Category.objects.get(id=4))

Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

Comment.objects.create(comment=Post.objects.get(id=1), commentUser=Author.objects.get(id=2).authorUser, text='Очень полезная статья!')
Comment.objects.create(comment=Post.objects.get(id=2), commentUser=Author.objects.get(id=1).authorUser, text='Молодцы!')
Comment.objects.create(comment=Post.objects.get(id=4), commentUser=Author.objects.get(id=1).authorUser, text='Обязательно попробую!')
Comment.objects.create(comment=Post.objects.get(id=1), commentUser=Author.objects.get(id=2).authorUser, text='Надеюсь, поможет')


Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
(я их много сделала, все количество сюда вписывать не буду)

Comment.objects.get(id=1).like() ставим
Comment.objects.get(id=3).like()
Comment.objects.get(id=2).like()
Comment.objects.get(id=4).like()

Comment.objects.get(id=1).rating смотрим

Comment.objects.get(id=1).dislike()     дизлайки


Посмотри рейтинг автора
a = Author.objects.get(id=1)
a.update_rating()
a.ratingAuthor

Рейтинг 2ого автора
b = Author.objects.get(id=2)
b.update_rating()
b.ratingAuthor

Ставим лайки и обновляем рейтинг постам
Post.objects.get(id=1).like()
a.update_rating()
a.ratingAuthor

Имя лучшего пользователя

best = Author.objects.order_by('-ratingAuthor')[:1]


Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
Здесь я не совсем поняла задание - нужно было одной командой все вывести? я задачу разбила на подзадачи:

Находим лучшую статью:
bestart = Post.objects.order_by('-rating')[:1]

set = Post.objects.filter(id=4).values('datecreation', 'rating', 'title', 'author_id')

Привью
prev = Post.objects.get(id=4)
prev.preview()

username - я нашла через метод filter, что лучшая статья имеет id  автора статьи: 2
User.objects.get(id=2).username

Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

Comment.objects.filter(id=4).values('datecreation', 'commentUser_id', 'rating', 'text')

